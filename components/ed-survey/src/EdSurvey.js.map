{"version":3,"file":"EdSurvey.js","sourceRoot":"","sources":["EdSurvey.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE3D,OAAO,uBAAuB,CAAC;AAC/B,OAAO,gBAAgB,CAAC;AAExB,mFAAmF;AACnF,gGAAgG;AAChG,0FAA0F;AAC1F,MAAM,OAAO,QAAS,SAAQ,UAAU;IAetC;QACE,KAAK,EAAE,CAAC;QALqB,SAAI,GAAG,QAAQ,CAAC;QAM7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC;IACzE,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;kCACmB,IAAI,CAAC,QAAQ;;kBAE7B,IAAI,CAAC,eAAe;kBACpB,CAAC,GAAkB,EAAE,EAAE;YAC/B,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;gBACxB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;aAC3B;QACH,CAAC;;UAEC,IAAI,CAAC,IAAI,KAAK,QAAQ;YACtB,CAAC,CAAC,IAAI,CAAA,4CAA4C;YAClD,CAAC,CAAC,IAAI,CAAA,yBAAyB;;KAEpC,CAAC;IACJ,CAAC;IAGO,eAAe,CAAC,GAAU;QAChC,MAAM,EAAE,GAAG,GAAG,CAAC,MAA0B,CAAC;QAC1C,MAAM,KAAK,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACvC,cAAc;QACd,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,SAAS,EAAE;YACzB,OAAO,EAAE,IAAI;YACb,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;gBAC9B,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB;SACF,CAAC,CACH,CAAC;QACF,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAClC,CAAC;;AAvDM,eAAM,GAAG,GAAG,CAAA;;;;;;;;GAQlB,CAAC;AAE6B;IAA9B,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;sCAAiB;AAED;IAA7C,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;0CAAU;AA0BvD;IADC,YAAY,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;+CAkB5B","sourcesContent":["import { html, css, LitElement } from 'lit';\nimport { eventOptions, property } from 'lit/decorators.js';\n\nimport './nudeui/nd-rating.js';\nimport './_EdSmiley.js';\n\n// This component implements a likert interaction activitie as defined in xapi spec\n// ie, An interaction which asks the learner to select from a discrete set of choices on a scale\n// see https://github.com/adlnet/xAPI-Spec/blob/master/xAPI-Data.md#interaction-activities\nexport class EdSurvey extends LitElement {\n  static styles = css`\n    :host {\n      display: block;\n    }\n    div {\n      display: flex;\n      justify-content: space-evenly;\n    }\n  `;\n\n  @property({ attribute: true }) type = 'smiley';\n\n  @property({ type: String, attribute: false }) question;\n\n  constructor() {\n    super();\n    this.question = this.innerText ? this.innerText : 'How are you today?';\n  }\n\n  render() {\n    return html`\n      <h2 aria-label=\"question\">${this.question}</h2>\n      <div\n        @click=\"${this._handleResponse}\"\n        @keyup=\"${(evt: KeyboardEvent) => {\n          if (evt.code === 'Enter') {\n            this._handleResponse(evt);\n          }\n        }}\"\n      >\n        ${this.type === 'rating'\n          ? html`<nd-rating max=\"5\" value=\"3\"> </nd-rating>`\n          : html`<ed-smiley></ed-smiley>`}\n      </div>\n    `;\n  }\n\n  @eventOptions({ once: true })\n  private _handleResponse(evt: Event) {\n    const el = evt.target as HTMLInputElement;\n    const value = el.getAttribute('value');\n    // CustomEvent\n    this.dispatchEvent(\n      new CustomEvent('edEvent', {\n        bubbles: true,\n        detail: {\n          date: new Date().toISOString(),\n          verb: 'RESPONDED',\n          type: this.type,\n          choice: value,\n          question: this.question,\n        },\n      })\n    );\n    el.setAttribute('readonly', '');\n  }\n}\n"]}